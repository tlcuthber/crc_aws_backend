name: CRC Backend Workflow
on: push
permissions:
  id-token: write
  contents: read
jobs:
    build:
        runs-on: ubuntu-latest
        defaults:
            run:
              working-directory: terraform
        outputs:
          api_url: ${{ steps.api-url.outputs.url }}
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with: 
            role-to-assume: ${{ secrets.AWS_ROLE }}
            aws-region: ${{ vars.AWS_REGION }}
          
        - uses: hashicorp/setup-terraform@v3
        
        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check
          continue-on-error: true
        
        - name: Terraform Init
          id: init
          run: terraform init

        - name: Terraform Validate
          id: validate
          run: terraform validate -no-color

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color
          continue-on-error: true

        - name: Check Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Apply
          run: terraform apply --auto-approve -input=false

        - name: Set Cypress Base URL
          id: api-url
          run: echo "url=$(terraform-bin output -raw invoke_url)$(terraform-bin output -raw path)" >> $GITHUB_OUTPUT
        - name: Print CYPRESS BASE URL 
          run: echo "${{ steps.api-url.outputs.url }}"

    smoke_test:
      runs-on: ubuntu-latest
      needs: build
      env:
        CYPRESS_BASE_URL: ${{ needs.build.outputs.api_url}} 
      steps:
        - run: echo "$CYPRESS_BASE_URL"

        - name: Checkout
          uses: actions/checkout@v4

        - name: Install Cypress npm module
          run: npm install --save-dev cypress

        - name: Cypress run
          uses: cypress-io/github-action@v6


